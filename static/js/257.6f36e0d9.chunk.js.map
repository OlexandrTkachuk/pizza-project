{"version":3,"file":"static/js/257.6f36e0d9.chunk.js","mappings":"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","sources":["constants/categoryOptions.js","components/Categories/Categories.styled.jsx","components/Categories/Categories.jsx","constants/sortOptions.js","components/Sort/Sort.styled.jsx","components/Sort/Sort.jsx","components/HomeBar/HomeBar.styled.jsx","components/HomeBar/HomeBar.jsx","components/MagicItem/MagicItem.styled.jsx","components/MagicItem/MagicItem.jsx","pages/Home.jsx"],"sourcesContent":["export const categoryOptions = [\n  'Всі',\n  'Самий ТОП',\n  \"М'ясні\",\n  'Вегетаріанські',\n  'Гострі',\n  'Спецпропозиції',\n];\n","import styled from '@emotion/styled';\n\nexport const CategoryList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1024px) {\n    gap: 12px;\n  }\n`;\n\nexport const CategoryButton = styled.button`\n  background-color: #f9f9f9;\n  padding: 8px 12px;\n  border-radius: 30px;\n  font-weight: bold;\n  font-size: 13px;\n  transition: background-color 250ms ease;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n\n  &:hover {\n    background-color: lightgrey;\n  }\n\n  &:active {\n    background-color: lightgrey;\n  }\n\n  &.active {\n    background-color: #282828;\n    color: #fff;\n  }\n`;\n","// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoryId } from 'redux/slices/selectors';\nimport { setCategoryId, clearPage } from 'redux/slices/filterSlice';\n\n// constants\nimport { categoryOptions } from 'constants/categoryOptions';\n\n// styles\nimport { CategoryList, CategoryButton } from './Categories.styled';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const categoryId = useSelector(selectCategoryId);\n\n  const handleCategory = index => {\n    dispatch(setCategoryId(index));\n    dispatch(clearPage());\n  };\n\n  return (\n    <CategoryList>\n      {categoryOptions.map((option, index) => (\n        <li key={index}>\n          <CategoryButton\n            onClick={() => handleCategory(index)}\n            className={categoryId === index ? 'active' : ''}\n          >\n            {option}\n          </CategoryButton>\n        </li>\n      ))}\n    </CategoryList>\n  );\n};\n\nexport default Categories;\n","export const sortOptions = [\n  { name: 'популярності', value: 'rating' },\n  { name: 'ціні ⬇', value: '-price' },\n  { name: 'ціні ⬆', value: 'price' },\n  { name: 'алфавіту', value: 'title' },\n];\n","import styled from '@emotion/styled';\n\nimport { GoTriangleDown, GoTriangleUp } from 'react-icons/go';\n\nexport const SortWrapper = styled.div`\n  position: relative;\n  user-select: none;\n`;\n\nexport const SortLabel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SortLabelIconUp = styled(GoTriangleUp)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortTextWrapper = styled.div``;\n\nexport const SortLabelIconDown = styled(GoTriangleDown)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortLabelBoldText = styled.b`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #2c2c2c;\n  margin-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortLabelText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #fe5f1e;\n  paddig-bottom: 1px;\n  user-select: none;\n  text-align: center;\n\n  border-bottom: 1px dashed #fe5f1e;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortPopup = styled.div`\n  position: absolute;\n  z-index: 999;\n  right: 0;\n  margin-top: 8px;\n  padding: 6px 0;\n  background: #ffffff;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\n  border-radius: 10px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n    padding: 10px 0;\n    margin-top: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 10px 0;\n    margin-top: 14px;\n  }\n`;\n\nexport const SortPopupList = styled.ul`\n  overflow: hidden;\n  text-align: end;\n`;\n\nexport const SortPopupItem = styled.li`\n  padding: 6px 12px;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  min-width: 100px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 16px 24px;\n  }\n\n  &:hover {\n    background: rgba(254, 95, 30, 0.05);\n    color: #fe5f1e;\n  }\n\n  &.active {\n    font-weight: 700;\n    color: #fe5f1e;\n  }\n`;\n","// system\nimport { useState } from 'react';\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSortType } from 'redux/slices/selectors';\nimport { setSortType } from 'redux/slices/filterSlice';\n\n// constants\nimport { sortOptions } from 'constants/sortOptions';\n\n// styles\nimport {\n  SortWrapper,\n  SortLabel,\n  SortLabelBoldText,\n  SortLabelText,\n  SortPopup,\n  SortPopupList,\n  SortPopupItem,\n  SortLabelIconUp,\n  SortLabelIconDown,\n  SortTextWrapper,\n} from './Sort.styled';\n\nconst Sort = () => {\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSortType);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const switchSortMenu = () => setIsMenuOpen(prev => !prev);\n\n  const handleOption = value => {\n    dispatch(setSortType(value));\n    setIsMenuOpen(prev => !prev);\n  };\n\n  return (\n    <SortWrapper>\n      <SortLabel>\n        {!isMenuOpen ? (\n          <SortLabelIconDown onClick={switchSortMenu} />\n        ) : (\n          <SortLabelIconUp onClick={switchSortMenu} />\n        )}\n\n        <SortTextWrapper>\n          <SortLabelBoldText>Сотрування за:</SortLabelBoldText>\n          <SortLabelText onClick={switchSortMenu}>{sort.name}</SortLabelText>\n        </SortTextWrapper>\n      </SortLabel>\n\n      {isMenuOpen && (\n        <SortPopup>\n          <SortPopupList>\n            {sortOptions.map((option, index) => (\n              <SortPopupItem\n                key={index}\n                onClick={() => handleOption(option)}\n                className={sort.name === option.name ? 'active' : ''}\n              >\n                {option.name}\n              </SortPopupItem>\n            ))}\n          </SortPopupList>\n        </SortPopup>\n      )}\n    </SortWrapper>\n  );\n};\n\nexport default Sort;\n","import styled from '@emotion/styled';\n\nexport const HomeBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n\n  @media screen and (min-width: 768px) {\n    align-items: center;\n    margin: 30px auto;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin: 44px auto;\n  }\n`;\n","// components\nimport Categories from 'components/Categories/Categories';\nimport Sort from 'components/Sort/Sort';\n\n// styles\nimport { HomeBarWrapper } from './HomeBar.styled';\n\nconst Homebar = ({ clearPage }) => {\n  return (\n    <HomeBarWrapper>\n      <Categories />\n      <Sort />\n    </HomeBarWrapper>\n  );\n};\n\nexport default Homebar;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 280px;\n  height: 560px;\n  background-color: #ebddba;\n  border-radius: 20px;\n  overflow: hidden;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #bc7a2e;\n    clip-path: circle(150px at 80% 20%);\n    transition: 0.5s ease-in-out;\n  }\n\n  &:hover:before {\n    clip-path: circle(300px at 80% -20%);\n  }\n\n  &:after {\n    content: 'Pizza';\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 5em;\n    font-weight: 800;\n    font-style: italic;\n    color: #c28b4d6d;\n  }\n\n  & .ImageBox {\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 999;\n    width: 100%;\n    height: 150px;\n    transition: 0.5s;\n  }\n\n  &:hover .ImageBox {\n    top: 0%;\n    right: 20px;\n    transform: translateY(0%);\n    width: 50%;\n  }\n\n  & .ContentBox {\n    position: absolute;\n    bottom: 100px;\n    width: 100%;\n    height: 100px;\n    text-align: center;\n    transition: 1s;\n    z-index: 10;\n  }\n\n  &:hover .ContentBox {\n    height: 210px;\n  }\n\n  & .StyledLink {\n    opacity: 0;\n    transform: translateY(50px);\n  }\n\n  &:hover .StyledLink {\n    opacity: 1;\n    transform: translateY(0px);\n    transition-delay: 0.75s;\n  }\n\n  &:hover .SizeWrapper {\n    opacity: 1;\n    visibility: visible;\n    transition-delay: 0.5s;\n  }\n\n  &:hover .ColorWrapper {\n    opacity: 1;\n    visibility: visible;\n    transition-delay: 0.6s;\n  }\n\n  & .SizeWrapper {\n    padding-bottom: 14px;\n  }\n\n  & .ColorWrapper {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport const ImageBox = styled.div``;\nexport const ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 20px;\n  transition: 0.5s;\n  display: flex;\n  background-color: #bc7a2e;\n  border-radius: 10px;\n  flex-direction: column;\n  padding: 10px;\n  user-select: none;\n  margin: 0 auto;\n  opacity: 0;\n  visibility: hidden;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  width: 270px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Title = styled.h2`\n  position: relative;\n  font-weight: 800;\n  margin-top: 18px;\n  font-size: 28px;\n  line-height: 24px;\n  letter-spacing: 1px;\n  color: #a52a2ad4;\n  color: seagreen;\n  margin-top: 20px;\n`;\n\nexport const SubTitle = styled.div`\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nexport const SizeSpan = styled.span`\n  padding: 4px 12px;\n  height: 26px;\n  text-align: center;\n  line-height: 26px;\n  font-size: 14px;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #111;\n  background-color: #fff;\n  transition: 500ms ease;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #6c3c1579;\n    color: #fff;\n  }\n`;\n\nexport const ColorSpan = styled.span`\n  display: flex;\n  font-weight: 600;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 50%;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: 500ms ease;\n\n  &:hover {\n    background-color: #6c3c1579;\n    color: #fff;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #fff;\n  border-radius: 12px;\n  text-decoration: none;\n  font-weight: 600;\n  color: #111;\n  transition: 0.5s;\n\n  padding: 6px 24px;\n  background: #ffffff;\n  border: 1px solid #bc7a2e;\n  color: #bc7a2e;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n\n  &:hover {\n    background: #bc7a2e;\n    border: 1px solid #bc7a2e;\n    color: #ffffff;\n  }\n`;\n\nexport const PriceText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  margin-right: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n","import boots from '../../assets/z-grusheyu-2-500x500.png';\nimport {\n  ButtonWrapper,\n  Card,\n  ColorSpan,\n  ContentBox,\n  Image,\n  ImageBox,\n  InfoWrapper,\n  PriceText,\n  SizeSpan,\n  StyledLink,\n  SubTitle,\n  Title,\n} from './MagicItem.styled';\n\nconst MagicItem = () => {\n  return (\n    <Card>\n      <ImageBox className=\"ImageBox\">\n        <Image src={boots} alt=\"boots\" />\n      </ImageBox>\n\n      <ContentBox className=\"ContentBox\">\n        <Title>Піца з грушею</Title>\n\n        <InfoWrapper className=\"SizeWrapper\">\n          <SubTitle style={{ marginBottom: '6px' }}>Тісто :</SubTitle>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 8,\n            }}\n          >\n            <SizeSpan>Тонке</SizeSpan>\n            <SizeSpan>Традиційне</SizeSpan>\n          </div>\n        </InfoWrapper>\n\n        <InfoWrapper className=\"ColorWrapper\">\n          <SubTitle>Розмір :</SubTitle>\n\n          <ColorSpan>20</ColorSpan>\n          <ColorSpan>30</ColorSpan>\n          <ColorSpan>40</ColorSpan>\n        </InfoWrapper>\n\n        <ButtonWrapper className=\"StyledLink\">\n          <PriceText>200 грн.</PriceText>\n          <StyledLink to=\"#\">Додати</StyledLink>\n        </ButtonWrapper>\n      </ContentBox>\n    </Card>\n  );\n};\n\nexport default MagicItem;\n","// system\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QueryString from 'qs';\n\n// redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCategoryId,\n  selectSortType,\n  selectPage,\n  // selectFilter,\n} from 'redux/slices/selectors';\nimport {\n  fetchPizzas,\n  fetchPizzasByCategory,\n} from 'redux/slices/pizzas-operations';\n\n// components\nimport Homebar from 'components/HomeBar/HomeBar';\n// import PizzaList from 'components/PizzaList/PizzaList';\n// import Pagination from 'components/Pagination/Pagination';\nimport MagicItem from 'components/MagicItem/MagicItem';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const categoryId = useSelector(selectCategoryId);\n  const sortType = useSelector(selectSortType);\n  const page = useSelector(selectPage);\n  // const searchValue = useSelector(selectFilter);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortType.value.includes('-') ? 'order=desc' : 'order=asc';\n    const sortBy = sortType.value.replace('-', '');\n\n    dispatch(fetchPizzasByCategory({ category, order, sortBy }));\n  }, [categoryId, dispatch, sortType]);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortType.value.includes('-') ? 'order=desc' : 'order=asc';\n    const sortBy = sortType.value.replace('-', '');\n\n    dispatch(fetchPizzas({ category, page, order, sortBy }));\n  }, [categoryId, dispatch, page, sortType]);\n\n  useEffect(() => {\n    const queryString = QueryString.stringify({\n      page,\n      categoryId,\n      sort: sortType.value,\n    });\n\n    navigate(`?${queryString}`);\n  }, [categoryId, navigate, page, sortType]);\n\n  return (\n    <>\n      <Homebar />\n\n      {/* <PizzaList />\n\n      {!searchValue && <Pagination />} */}\n\n      <MagicItem />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["categoryOptions","CategoryList","styled","CategoryButton","dispatch","useDispatch","categoryId","useSelector","selectCategoryId","map","option","index","onClick","setCategoryId","clearPage","handleCategory","className","sortOptions","name","value","SortWrapper","SortLabel","SortLabelIconUp","GoTriangleUp","SortTextWrapper","SortLabelIconDown","GoTriangleDown","SortLabelBoldText","SortLabelText","SortPopup","SortPopupList","SortPopupItem","sort","selectSortType","useState","isMenuOpen","setIsMenuOpen","switchSortMenu","prev","setSortType","HomeBarWrapper","Card","ImageBox","ContentBox","InfoWrapper","Image","Title","SubTitle","SizeSpan","ColorSpan","StyledLink","NavLink","PriceText","ButtonWrapper","src","boots","alt","style","marginBottom","display","flexDirection","gap","to","navigate","useNavigate","sortType","page","selectPage","useEffect","category","order","includes","sortBy","replace","fetchPizzasByCategory","fetchPizzas","queryString","QueryString"],"sourceRoot":""}