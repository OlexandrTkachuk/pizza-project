{"version":3,"file":"static/js/395.e4904169.chunk.js","mappings":"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","sources":["constants/typeOptions.js","constants/categoryOptions.js","components/Categories/Categories.styled.jsx","components/Categories/Categories.jsx","constants/sortOptions.js","components/Sort/Sort.styled.jsx","components/Sort/Sort.jsx","components/HomeBar/HomeBar.styled.jsx","components/HomeBar/HomeBar.jsx","components/MagicItem/MagicItem.styled.jsx","components/MagicItem/MagicItem.jsx","components/Skeleton/Skeleto.jsx","components/PizzaList/PizzaList.styled.jsx","components/PizzaList/PizzaList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home.jsx"],"sourcesContent":["export const typeOptions = ['тонке', 'традиційне'];\n","export const categoryOptions = [\n  'Всі',\n  'Самий ТОП',\n  \"М'ясні\",\n  'Вегетаріанські',\n  'Гострі',\n  'Спецпропозиції',\n];\n","import styled from '@emotion/styled';\n\nexport const CategoryList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1024px) {\n    gap: 12px;\n  }\n`;\n\nexport const CategoryButton = styled.button`\n  background-color: #f9f9f9;\n  padding: 8px 12px;\n  border-radius: 30px;\n  font-weight: bold;\n  font-size: 13px;\n  transition: background-color 250ms ease;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n\n  &:hover {\n    background-color: lightgrey;\n  }\n\n  &:active {\n    background-color: lightgrey;\n  }\n\n  &.active {\n    background-color: #282828;\n    color: #fff;\n  }\n`;\n","// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoryId } from 'redux/slices/selectors';\nimport { setCategoryId, clearPage } from 'redux/slices/filterSlice';\n\n// constants\nimport { categoryOptions } from 'constants/categoryOptions';\n\n// styles\nimport { CategoryList, CategoryButton } from './Categories.styled';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const categoryId = useSelector(selectCategoryId);\n\n  const handleCategory = index => {\n    dispatch(setCategoryId(index));\n    dispatch(clearPage());\n  };\n\n  return (\n    <CategoryList>\n      {categoryOptions.map((option, index) => (\n        <li key={index}>\n          <CategoryButton\n            onClick={() => handleCategory(index)}\n            className={categoryId === index ? 'active' : ''}\n          >\n            {option}\n          </CategoryButton>\n        </li>\n      ))}\n    </CategoryList>\n  );\n};\n\nexport default Categories;\n","export const sortOptions = [\n  { name: 'популярності', value: 'rating' },\n  { name: 'ціні ⬇', value: '-price' },\n  { name: 'ціні ⬆', value: 'price' },\n  { name: 'алфавіту', value: 'title' },\n];\n","import styled from '@emotion/styled';\n\nimport { GoTriangleDown, GoTriangleUp } from 'react-icons/go';\n\nexport const SortWrapper = styled.div`\n  position: relative;\n  user-select: none;\n`;\n\nexport const SortLabel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SortLabelIconUp = styled(GoTriangleUp)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortTextWrapper = styled.div``;\n\nexport const SortLabelIconDown = styled(GoTriangleDown)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortLabelBoldText = styled.b`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #2c2c2c;\n  margin-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortLabelText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #fe5f1e;\n  paddig-bottom: 1px;\n  user-select: none;\n  text-align: center;\n\n  border-bottom: 1px dashed #fe5f1e;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortPopup = styled.div`\n  position: absolute;\n  z-index: 999;\n  right: 0;\n  margin-top: 8px;\n  padding: 6px 0;\n  background: #ffffff;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\n  border-radius: 10px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n    padding: 10px 0;\n    margin-top: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 10px 0;\n    margin-top: 14px;\n  }\n`;\n\nexport const SortPopupList = styled.ul`\n  overflow: hidden;\n  text-align: end;\n`;\n\nexport const SortPopupItem = styled.li`\n  padding: 6px 12px;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  min-width: 100px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 16px 24px;\n  }\n\n  &:hover {\n    background: rgba(254, 95, 30, 0.05);\n    color: #fe5f1e;\n  }\n\n  &.active {\n    font-weight: 700;\n    color: #fe5f1e;\n  }\n`;\n","// system\nimport { useEffect, useRef, useState } from 'react';\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSortType } from 'redux/slices/selectors';\nimport { setSortType } from 'redux/slices/filterSlice';\n\n// constants\nimport { sortOptions } from 'constants/sortOptions';\n\n// styles\nimport {\n  SortWrapper,\n  SortLabel,\n  SortLabelBoldText,\n  SortLabelText,\n  SortPopup,\n  SortPopupList,\n  SortPopupItem,\n  SortLabelIconUp,\n  SortLabelIconDown,\n  SortTextWrapper,\n} from './Sort.styled';\n\nconst Sort = () => {\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSortType);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const sortRef = useRef(null);\n\n  const switchSortMenu = () => setIsMenuOpen(prev => !prev);\n\n  const handleOption = value => {\n    dispatch(setSortType(value));\n    setIsMenuOpen(prev => !prev);\n  };\n\n  const handleOutsideClick = event => {\n    const path = event.composedPath();\n\n    if (!path.includes(sortRef.current)) {\n      setIsMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  return (\n    <SortWrapper ref={sortRef}>\n      <SortLabel>\n        {!isMenuOpen ? (\n          <SortLabelIconDown onClick={switchSortMenu} />\n        ) : (\n          <SortLabelIconUp onClick={switchSortMenu} />\n        )}\n\n        <SortTextWrapper>\n          <SortLabelBoldText>Сотрування за:</SortLabelBoldText>\n          <SortLabelText onClick={switchSortMenu}>{sort.name}</SortLabelText>\n        </SortTextWrapper>\n      </SortLabel>\n\n      {isMenuOpen && (\n        <SortPopup>\n          <SortPopupList>\n            {sortOptions.map((option, index) => (\n              <SortPopupItem\n                key={index}\n                onClick={() => handleOption(option)}\n                className={sort.name === option.name ? 'active' : ''}\n              >\n                {option.name}\n              </SortPopupItem>\n            ))}\n          </SortPopupList>\n        </SortPopup>\n      )}\n    </SortWrapper>\n  );\n};\n\nexport default Sort;\n","import styled from '@emotion/styled';\n\nexport const HomeBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n\n  @media screen and (min-width: 768px) {\n    align-items: center;\n    margin: 30px auto;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin: 44px auto;\n  }\n`;\n","// components\nimport Categories from 'components/Categories/Categories';\nimport Sort from 'components/Sort/Sort';\n\n// styles\nimport { HomeBarWrapper } from './HomeBar.styled';\n\nconst Homebar = ({ clearPage }) => {\n  return (\n    <HomeBarWrapper>\n      <Categories />\n      <Sort />\n    </HomeBarWrapper>\n  );\n};\n\nexport default Homebar;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 280px;\n  height: 560px;\n  background-color: #ebddba;\n  border-radius: 20px;\n  overflow: hidden;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #bc7a2e;\n    clip-path: circle(150px at 80% 20%);\n    transition: 0.5s ease-in-out;\n  }\n\n  &:hover:before {\n    clip-path: circle(300px at 80% -20%);\n  }\n\n  &:after {\n    content: 'Pizza';\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 5em;\n    font-weight: 800;\n    font-style: italic;\n    color: #c28b4d6d;\n  }\n\n  & .ImageBox {\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 999;\n    width: 100%;\n    height: 150px;\n    transition: 0.5s;\n  }\n\n  &:hover .ImageBox {\n    top: 0%;\n    right: 20px;\n    transform: translateY(0%);\n    width: 50%;\n  }\n\n  & .ContentBox {\n    position: absolute;\n    bottom: 100px;\n    width: 100%;\n    height: 100px;\n    text-align: center;\n    transition: 1s;\n    z-index: 10;\n  }\n\n  &:hover .ContentBox {\n    height: 210px;\n  }\n\n  & .StyledLink {\n    opacity: 0;\n    transform: translateY(50px);\n  }\n\n  &:hover .StyledLink {\n    opacity: 1;\n    transform: translateY(0px);\n    transition-delay: 0.6s;\n  }\n\n  &:hover .SizeWrapper {\n    opacity: 1;\n    visibility: visible;\n    transition-delay: 0.5s;\n  }\n\n  &:hover .ColorWrapper {\n    opacity: 1;\n    visibility: visible;\n    transition-delay: 0.6s;\n  }\n\n  & .SizeWrapper {\n    padding-bottom: 14px;\n  }\n\n  & .ColorWrapper {\n    display: flex;\n    flex-direction: row;\n  }\n\n  & .Ingredients {\n    bottom: 100px;\n    opacity: 1;\n    transform: translateY(50px);\n  }\n\n  &:hover .Ingredients {\n    opacity: 0;\n    transform: translateY(550px);\n    transition-delay: 0.3s;\n  }\n`;\n\nexport const ImageBox = styled.div``;\nexport const ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 20px;\n  transition: 0.5s;\n  display: flex;\n  background-color: #bc7a2e;\n  border-radius: 10px;\n  flex-direction: column;\n  padding: 10px;\n  user-select: none;\n  margin: 0 auto;\n  opacity: 0;\n  visibility: hidden;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  width: 270px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Title = styled.h2`\n  position: relative;\n  font-weight: 800;\n  margin-top: 18px;\n  font-size: 28px;\n  line-height: 24px;\n  letter-spacing: 1px;\n  color: #a52a2ad4;\n  color: seagreen;\n  margin-top: 20px;\n`;\n\nexport const SubTitle = styled.div`\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nexport const SizeSpan = styled.li`\n  padding: 4px 12px;\n  height: 26px;\n  text-align: center;\n  line-height: 26px;\n  font-size: 14px;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #111;\n  background-color: #fff;\n  transition: 500ms ease;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #6c3c1579;\n    color: #fff;\n  }\n\n  &.active {\n    background-color: #6c3c1579;\n    color: #fff;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.04);\n    border-radius: 5px;\n    cursor: auto;\n  }\n`;\n\nexport const ColorSpan = styled.span`\n  display: flex;\n  font-weight: 600;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 50%;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: 500ms ease;\n\n  &:hover {\n    background-color: #6c3c1579;\n    color: #fff;\n  }\n\n  &.active {\n    background-color: #6c3c1579;\n    color: #fff;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.04);\n    border-radius: 5px;\n    cursor: auto;\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  padding: 10px 24px;\n  gap: 8px;\n  border-radius: 12px;\n  text-decoration: none;\n  transition: 0.5s;\n  background: #ffffff;\n  border: 1px solid #bc7a2e;\n  color: #bc7a2e;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n\n  &:hover {\n    background: #bc7a2e;\n    border: 1px solid #bc7a2e;\n    color: #ffffff;\n  }\n`;\n\nexport const PriceText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  margin-right: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Ingredient = styled.p`\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n  padding: 8px 20px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { typeOptions } from 'constants/typeOptions';\nimport { addCartItem } from 'redux/slices/cartItemsSlice';\nimport {\n  AddButton,\n  ButtonWrapper,\n  Card,\n  ColorSpan,\n  ContentBox,\n  Image,\n  ImageBox,\n  InfoWrapper,\n  Ingredient,\n  PriceText,\n  SizeSpan,\n  SubTitle,\n  Title,\n} from './MagicItem.styled';\n\nconst MagicItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const { imageUrl, title, types, sizes, price, ingredients, id } = item;\n\n  const [count, setCount] = useState(0);\n  const [sizeActiveIndex, setSizeActiveIndex] = useState(0);\n  const [typeActiveIndex, setTypeActiveIndex] = useState(0);\n\n  const handleCountIncrement = () => setCount(prev => prev + 1);\n  const handeSizeActiveIndex = index => setSizeActiveIndex(index);\n  const handleTypeActiveIndex = index => setTypeActiveIndex(index);\n\n  const handleFullPrice = () => {\n    if (sizes[sizeActiveIndex] === 30) {\n      return `${Math.round(price * 1.35)}`;\n    } else if (sizes[sizeActiveIndex] === 40) {\n      return `${Math.round(price * 1.65)}`;\n    } else {\n      return `${price * 1}`;\n    }\n  };\n\n  const handleAddItem = () => {\n    handleCountIncrement();\n\n    const cartItem = {\n      id,\n      imageUrl,\n      title,\n      price: handleFullPrice(),\n      type: types[typeActiveIndex],\n      size: sizes[sizeActiveIndex],\n    };\n\n    dispatch(addCartItem(cartItem));\n\n    // const alreadyExists = cartItems.findIndex(item => {\n    //   const name = item.title.toLowerCase();\n    //   const newName = cartItem.title.toLowerCase();\n\n    //   return name === newName;\n    // });\n\n    // if (alreadyExists >= 0) {\n    //   return;\n    // } else {\n    //   dispatch(addCartItem(cartItem));\n    // }\n  };\n\n  return (\n    <Card>\n      <ImageBox className=\"ImageBox\">\n        <Image src={imageUrl} alt={title} loading=\"lazy\" />\n      </ImageBox>\n\n      <ContentBox className=\"ContentBox\">\n        <Title>{title}</Title>\n\n        <InfoWrapper className=\"SizeWrapper\">\n          <SubTitle style={{ marginBottom: '6px' }}>Тісто :</SubTitle>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              gap: 8,\n            }}\n          >\n            {types.map((option, index) => (\n              <SizeSpan\n                key={index}\n                className={typeActiveIndex === index ? 'active' : ''}\n                onClick={() => handleTypeActiveIndex(index)}\n              >\n                {typeOptions[option]}\n              </SizeSpan>\n            ))}\n          </div>\n        </InfoWrapper>\n\n        <InfoWrapper className=\"ColorWrapper\">\n          <SubTitle>Розмір :</SubTitle>\n\n          {sizes.map((option, index) => (\n            <ColorSpan\n              onClick={() => handeSizeActiveIndex(index)}\n              className={sizeActiveIndex === index ? 'active' : ''}\n              key={index}\n            >\n              {option}\n            </ColorSpan>\n          ))}\n        </InfoWrapper>\n\n        <ButtonWrapper className=\"StyledLink\">\n          <PriceText>{handleFullPrice()} грн.</PriceText>\n\n          <AddButton onClick={handleAddItem}>\n            <p> Додати</p>\n            <i>{count > 0 ? count : ' '}</i>\n          </AddButton>\n        </ButtonWrapper>\n      </ContentBox>\n\n      <Ingredient className=\"Ingredients\">{ingredients}</Ingredient>\n    </Card>\n  );\n};\n\nexport default MagicItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Skeleton = props => (\n  <ContentLoader\n    speed={2}\n    width={280}\n    height={558}\n    viewBox=\"0 0 280 558\"\n    backgroundColor=\"#e4e2e2\"\n    foregroundColor=\"#cbc3c3\"\n    {...props}\n  >\n    <rect x=\"16\" y=\"378\" rx=\"16\" ry=\"16\" width=\"248\" height=\"86\" />\n    <rect x=\"70\" y=\"330\" rx=\"16\" ry=\"16\" width=\"140\" height=\"26\" />\n    <rect x=\"16\" y=\"498\" rx=\"16\" ry=\"16\" width=\"248\" height=\"42\" />\n    <circle cx=\"138\" cy=\"143\" r=\"124\" />\n    <rect x=\"42\" y=\"281\" rx=\"16\" ry=\"16\" width=\"200\" height=\"24\" />\n  </ContentLoader>\n);\n\nexport default Skeleton;\n","import styled from '@emotion/styled';\n\nexport const PizzaTitle = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n\n  letter-spacing: 0.01em;\n  color: #000000;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 39px;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 36px;\n    line-height: 42px;\n    margin-bottom: 44px;\n  }\n`;\n\nexport const PizzaGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  margin: 0 auto;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 36px;\n    max-width: 596px;\n    margin: 0 auto;\n    justify-content: start;\n  }\n\n  @media screen and (min-width: 1232px) {\n    gap: 60px;\n    max-width: 960px;\n    justify-content: start;\n  }\n`;\n\nexport const NotFoundGif = styled.img`\n  width: 300px;\n  margin: 40px auto 0;\n  border-radius: 8px;\n  /* height: 300px; */\n`;\n","//redux\nimport { useSelector } from 'react-redux';\nimport {\n  selectCategoryId,\n  selectPizzas,\n  selectIsLoading,\n  selectFilter,\n} from 'redux/slices/selectors';\n\n// components\nimport MagicItem from 'components/MagicItem/MagicItem';\nimport Skeleton from 'components/Skeleton/Skeleto';\n\n// constants\nimport { categoryOptions } from 'constants/categoryOptions';\n\n// styles\nimport { PizzaTitle, PizzaGallery, NotFoundGif } from './PizzaList.styled';\n\n// images\nimport notfound from '../../assets/notfoundgif.gif';\n\nconst PizzaList = () => {\n  const categoryId = useSelector(selectCategoryId);\n  const items = useSelector(selectPizzas);\n  const allItems = useSelector(state => state.pizzas.allItems);\n  const isLoading = useSelector(selectIsLoading);\n  const searchValue = useSelector(selectFilter);\n\n  const normalizeValue = searchValue.toLowerCase();\n  const filteredItems = allItems.filter(item =>\n    item.title.toLowerCase().includes(normalizeValue)\n  );\n\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <Skeleton key={index} />\n  ));\n\n  const isFilter = searchValue === '' ? items : filteredItems;\n\n  const pizzas = isFilter.map(item => <MagicItem item={item} key={item.id} />);\n\n  return (\n    <>\n      <PizzaTitle>{categoryOptions[categoryId]}</PizzaTitle>\n\n      <PizzaGallery>{isLoading ? skeletons : pizzas}</PizzaGallery>\n\n      {filteredItems.length === 0 && (\n        <NotFoundGif src={notfound} alt=\"not found\" />\n      )}\n    </>\n  );\n};\n\nexport default PizzaList;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationWrapper = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  background: #ebddba;\n  margin: 0 auto;\n  margin-top: 60px;\n  width: 60%;\n  padding: 16px 0;\n  border-radius: 100px;\n  font-size: 18px;\n  font-weight: 600;\n\n  @media screen and (max-width: 768) {\n    width: 300px;\n  }\n\n  .selected a {\n    color: #fff;\n    background: green;\n  }\n\n  li {\n    display: flex;\n\n    a {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      width: 32px;\n      height: 32px;\n      line-height: 30px;\n      cursor: pointer;\n      padding: 6px 6px;\n      border-radius: 50%;\n      background: #fff;\n      border: 1px solid green;\n      color: green;\n      transition: all 250ms ease;\n\n      &:hover {\n        background: green;\n        color: #fff;\n      }\n    }\n  }\n`;\n","import { PaginationWrapper } from './Pagination.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPage, selectPageCount } from 'redux/slices/selectors';\nimport { setPage } from 'redux/slices/filterSlice';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const pageCount = useSelector(selectPageCount);\n  const page = useSelector(selectPage);\n\n  const handlePage = event => {\n    dispatch(setPage(event.selected + 1));\n    window.scroll(0, 0);\n  };\n\n  return (\n    <>\n      <PaginationWrapper\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        previousLabel=\"<\"\n        onPageChange={event => handlePage(event)}\n        pageRangeDisplayed={6}\n        pageCount={pageCount}\n        forcePage={page - 1}\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","// system\nimport { useEffect } from 'react';\n\n// redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCategoryId,\n  selectSortType,\n  selectPage,\n  selectFilter,\n} from 'redux/slices/selectors';\nimport {\n  fetchPizzas,\n  fetchPizzasByCategory,\n} from 'redux/slices/pizzas-operations';\n\n// components\nimport Homebar from 'components/HomeBar/HomeBar';\nimport PizzaList from 'components/PizzaList/PizzaList';\nimport Pagination from 'components/Pagination/Pagination';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const categoryId = useSelector(selectCategoryId);\n  const sortType = useSelector(selectSortType);\n  const page = useSelector(selectPage);\n  const searchValue = useSelector(selectFilter);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortType.value.includes('-') ? 'order=desc' : 'order=asc';\n    const sortBy = sortType.value.replace('-', '');\n\n    dispatch(fetchPizzasByCategory({ category, order, sortBy }));\n  }, [categoryId, dispatch, sortType]);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortType.value.includes('-') ? 'order=desc' : 'order=asc';\n    const sortBy = sortType.value.replace('-', '');\n\n    dispatch(fetchPizzas({ category, page, order, sortBy }));\n  }, [categoryId, dispatch, page, sortType]);\n\n  return (\n    <>\n      <Homebar />\n\n      <PizzaList />\n\n      {!searchValue && <Pagination />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["typeOptions","categoryOptions","CategoryList","styled","CategoryButton","dispatch","useDispatch","categoryId","useSelector","selectCategoryId","map","option","index","onClick","setCategoryId","clearPage","handleCategory","className","sortOptions","name","value","SortWrapper","SortLabel","SortLabelIconUp","GoTriangleUp","SortTextWrapper","SortLabelIconDown","GoTriangleDown","SortLabelBoldText","SortLabelText","SortPopup","SortPopupList","SortPopupItem","sort","selectSortType","useState","isMenuOpen","setIsMenuOpen","sortRef","useRef","switchSortMenu","prev","handleOutsideClick","event","composedPath","includes","current","useEffect","document","body","addEventListener","removeEventListener","ref","setSortType","HomeBarWrapper","Card","ImageBox","ContentBox","InfoWrapper","Image","Title","SubTitle","SizeSpan","ColorSpan","AddButton","PriceText","ButtonWrapper","Ingredient","item","imageUrl","title","types","sizes","price","ingredients","id","count","setCount","sizeActiveIndex","setSizeActiveIndex","typeActiveIndex","setTypeActiveIndex","handleFullPrice","Math","round","src","alt","loading","style","marginBottom","display","flexDirection","gap","handleTypeActiveIndex","handeSizeActiveIndex","cartItem","type","size","addCartItem","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","PizzaTitle","PizzaGallery","NotFoundGif","items","selectPizzas","allItems","state","pizzas","isLoading","selectIsLoading","searchValue","selectFilter","normalizeValue","toLowerCase","filteredItems","filter","skeletons","Array","_","Skeleto","length","notfound","PaginationWrapper","ReactPaginate","pageCount","selectPageCount","page","selectPage","breakLabel","nextLabel","previousLabel","onPageChange","setPage","selected","window","scroll","handlePage","pageRangeDisplayed","forcePage","renderOnZeroPageCount","sortType","category","order","sortBy","replace","fetchPizzasByCategory","fetchPizzas"],"sourceRoot":""}