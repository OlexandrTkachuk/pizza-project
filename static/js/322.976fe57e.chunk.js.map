{"version":3,"file":"static/js/322.976fe57e.chunk.js","mappings":"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","sources":["constants/categoryOptions.js","components/Categories/Categories.styled.jsx","components/Categories/Categories.jsx","constants/sortOptions.js","components/Sort/Sort.styled.jsx","components/Sort/Sort.jsx","components/HomeBar/HomeBar.styled.jsx","components/HomeBar/HomeBar.jsx","components/PizzaItem/PizzaItem.styled.jsx","components/PizzaItem/PizzaItem.jsx","components/Skeleton/Skeleto.jsx","components/PizzaList/PizzaList.styled.jsx","components/PizzaList/PizzaList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home.jsx"],"sourcesContent":["export const categoryOptions = [\n  'Всі',\n  'Самий ТОП',\n  \"М'ясні\",\n  'Вегетаріанські',\n  'Гострі',\n  'Спецпропозиції',\n];\n","import styled from '@emotion/styled';\n\nexport const CategoryList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1024px) {\n    gap: 12px;\n  }\n`;\n\nexport const CategoryButton = styled.button`\n  background-color: #f9f9f9;\n  padding: 8px 12px;\n  border-radius: 30px;\n  font-weight: bold;\n  font-size: 13px;\n  transition: background-color 250ms ease;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n\n  &:hover {\n    background-color: lightgrey;\n  }\n\n  &:active {\n    background-color: lightgrey;\n  }\n\n  &.active {\n    background-color: #282828;\n    color: #fff;\n  }\n`;\n","// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoryId } from 'redux/slices/selectors';\nimport { setCategoryId, clearPage } from 'redux/slices/filterSlice';\n\n// constants\nimport { categoryOptions } from 'constants/categoryOptions';\n\n// styles\nimport { CategoryList, CategoryButton } from './Categories.styled';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const categoryId = useSelector(selectCategoryId);\n\n  return (\n    <CategoryList>\n      {categoryOptions.map((option, index) => (\n        <li key={index}>\n          <CategoryButton\n            onClick={() => {\n              dispatch(setCategoryId(index));\n              dispatch(clearPage());\n            }}\n            className={categoryId === index ? 'active' : ''}\n          >\n            {option}\n          </CategoryButton>\n        </li>\n      ))}\n    </CategoryList>\n  );\n};\n\nexport default Categories;\n","export const sortOptions = [\n  { name: 'популярності', value: 'rating' },\n  { name: 'ціні ⬇', value: '-price' },\n  { name: 'ціні ⬆', value: 'price' },\n  { name: 'алфавіту', value: 'title' },\n];\n","import styled from '@emotion/styled';\n\nimport { GoTriangleDown, GoTriangleUp } from 'react-icons/go';\n\nexport const SortWrapper = styled.div`\n  position: relative;\n  user-select: none;\n`;\n\nexport const SortLabel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SortLabelIconUp = styled(GoTriangleUp)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortTextWrapper = styled.div``;\n\nexport const SortLabelIconDown = styled(GoTriangleDown)`\n  margin-right: 6px;\n  cursor: pointer;\n  transition: all 250ms ease;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport const SortLabelBoldText = styled.b`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #2c2c2c;\n  margin-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortLabelText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #fe5f1e;\n  paddig-bottom: 1px;\n  user-select: none;\n  text-align: center;\n\n  border-bottom: 1px dashed #fe5f1e;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SortPopup = styled.div`\n  position: absolute;\n  z-index: 999;\n  right: 0;\n  margin-top: 8px;\n  padding: 6px 0;\n  background: #ffffff;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\n  border-radius: 10px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    font-size: 15px;\n    padding: 10px 0;\n    margin-top: 12px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 10px 0;\n    margin-top: 14px;\n  }\n`;\n\nexport const SortPopupList = styled.ul`\n  overflow: hidden;\n  text-align: end;\n`;\n\nexport const SortPopupItem = styled.li`\n  padding: 6px 12px;\n  cursor: pointer;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 13px;\n  line-height: 17px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  min-width: 100px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 20px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 16px;\n    padding: 16px 24px;\n  }\n\n  &:hover {\n    background: rgba(254, 95, 30, 0.05);\n    color: #fe5f1e;\n  }\n\n  &.active {\n    font-weight: 700;\n    color: #fe5f1e;\n  }\n`;\n","// system\nimport { useState } from 'react';\n\n// redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSortType } from 'redux/slices/selectors';\nimport { setSortType } from 'redux/slices/filterSlice';\n\n// constants\nimport { sortOptions } from 'constants/sortOptions';\n\n// styles\nimport {\n  SortWrapper,\n  SortLabel,\n  SortLabelBoldText,\n  SortLabelText,\n  SortPopup,\n  SortPopupList,\n  SortPopupItem,\n  SortLabelIconUp,\n  SortLabelIconDown,\n  SortTextWrapper,\n} from './Sort.styled';\n\nconst Sort = () => {\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSortType);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const switchSortMenu = () => setIsMenuOpen(prev => !prev);\n\n  const handleOption = value => {\n    dispatch(setSortType(value));\n    setIsMenuOpen(prev => !prev);\n  };\n\n  return (\n    <SortWrapper>\n      <SortLabel>\n        {!isMenuOpen ? (\n          <SortLabelIconDown onClick={switchSortMenu} />\n        ) : (\n          <SortLabelIconUp onClick={switchSortMenu} />\n        )}\n\n        <SortTextWrapper>\n          <SortLabelBoldText>Сотрування за:</SortLabelBoldText>\n          <SortLabelText onClick={switchSortMenu}>{sort.name}</SortLabelText>\n        </SortTextWrapper>\n      </SortLabel>\n\n      {isMenuOpen && (\n        <SortPopup>\n          <SortPopupList>\n            {sortOptions.map((option, index) => (\n              <SortPopupItem\n                key={index}\n                onClick={() => handleOption(option)}\n                className={sort.name === option.name ? 'active' : ''}\n              >\n                {option.name}\n              </SortPopupItem>\n            ))}\n          </SortPopupList>\n        </SortPopup>\n      )}\n    </SortWrapper>\n  );\n};\n\nexport default Sort;\n","import styled from '@emotion/styled';\n\nexport const HomeBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n\n  @media screen and (min-width: 768px) {\n    align-items: center;\n    margin: 30px auto;\n  }\n\n  @media screen and (min-width: 1024px) {\n    margin: 44px auto;\n  }\n`;\n","// components\nimport Categories from 'components/Categories/Categories';\nimport Sort from 'components/Sort/Sort';\n\n// styles\nimport { HomeBarWrapper } from './HomeBar.styled';\n\nconst Homebar = ({ clearPage }) => {\n  return (\n    <HomeBarWrapper>\n      <Categories />\n      <Sort />\n    </HomeBarWrapper>\n  );\n};\n\nexport default Homebar;\n","import styled from '@emotion/styled';\n\nimport { GoTriangleDown, GoTriangleUp } from 'react-icons/go';\n\nexport const PizzaItemWrapper = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 280px;\n  justify-content: space-between;\n  text-align: center;\n  padding: 8px 6px;\n  transition: all 250ms ease;\n  background: #ebddba;\n  border-radius: 16px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 280px;\n    padding: 20px 16px;\n    margin: 0;\n  }\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const PizzaItemImageWrapper = styled.div`\n  display: flex;\n  z-index: 10;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PizzaItemImage = styled.img`\n  transition: all 250ms ease;\n  border-radius: 50%;\n  user-select: none;\n  width: 240px;\n  height: 240px;\n\n  @media screen and (min-width: 768px) {\n    width: 248px;\n    height: 248px;\n  }\n\n  &:hover {\n    transform: scale(1.05);\n    transform: rotate(30deg);\n  }\n`;\n\nexport const PizzaItemTitle = styled.h3`\n  font-style: normal;\n  font-weight: 800;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  letter-spacing: 0.01em;\n  color: #000000;\n  z-index: 999;\n  margin: 8px auto 12px;\n\n  @media screen and (min-width: 768px) {\n    min-height: 48px;\n    margin-top: 18px;\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nexport const PizzaItemIngredients = styled.button`\n  display: block;\n  justify-contet: center;\n  align-items: center;\n  cursor: pointer;\n  text-align: center;\n  margin: 0 auto 16px;\n  user-select: none;\n\n  background: rgb(65, 147, 65);\n  padding: 4px 20px;\n  border: none;\n  color: #fff;\n  border-radius: 20px;\n  font-weight: 600;\n  font-size: 13px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    margin: 0 auto 20px;\n  }\n`;\n\nexport const IngredientsWrapper = styled.ul`\n  position: absolute;\n  top: 8px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 240px;\n  height: 240px;\n  background: rgb(65, 147, 65);\n  border-radius: 12px;\n  padding: 12px 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: start;\n  font-weight: 600;\n  font-size: 15px;\n  list-style-type: disc;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    width: 248px;\n    height: 248px;\n    top: 20px;\n  }\n`;\n\nexport const IngredientsText = styled.li`\n  margin-left: 36px;\n  color: #fff;\n`;\n\nexport const PizzaSelectorWrapper = styled.div`\n  display: flex;\n  background-color: lightgrey;\n  border-radius: 10px;\n  flex-direction: column;\n  padding: 6px;\n  user-select: none;\n`;\n\nexport const SelectorList = styled.ul`\n  display: flex;\n  flex: 1;\n\n  &:first-of-type {\n    margin-bottom: 6px;\n  }\n`;\n\nexport const SelectorItem = styled.li`\n  padding: 8px;\n  flex: 1;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 13px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  &.active {\n    background: #ffffff;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.04);\n    border-radius: 5px;\n    cursor: auto;\n  }\n`;\n\nexport const PizzaItemBottomWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  justify-content: space-between;\n  margin-top: 24px;\n  padding: 0 6px;\n  flex: 2;\n`;\n\nexport const PizzaItemPriceWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const PizzaItemPriceText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 22px;\n  letter-spacing: 0.015em;\n  color: #000000;\n  margin-right: 4px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n    line-height: 27px;\n  }\n`;\n\nexport const PizzaItemButtonWrapper = styled.button`\n  display: flex;\n  flex: 5;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  padding: 6px 12px;\n  background: #ffffff;\n  border: 1px solid #eb5a1e;\n  border-radius: 30px;\n  gap: 4px;\n  color: #eb5a1e;\n  cursor: pointer;\n  max-width: 160px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n\n  transition: all 200ms ease;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    min-width: 142px;\n    padding: 6px 12px;\n  }\n\n  &:hover {\n    background: #fe5f1e;\n    border: 1px solid #fe5f1e;\n    color: #ffffff;\n  }\n`;\n\nexport const Counter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const CounterButton = styled.button`\n  border: none;\n  background: transparent;\n  height: 20px;\n  cursor: pointer;\n`;\n\nexport const CounterIconUp = styled(GoTriangleUp)`\n  transition: all 250ms ease;\n  color: #212121;\n`;\n\nexport const CounterIconDown = styled(GoTriangleDown)`\n  transition: all 250ms ease;\n\n  &::disabled {\n    color: red;\n  }\n`;\n","// system\nimport { useState } from 'react';\n\n// styles\nimport {\n  Counter,\n  CounterButton,\n  CounterIconDown,\n  CounterIconUp,\n  IngredientsText,\n  IngredientsWrapper,\n  PizzaItemBottomWrapper,\n  PizzaItemButtonWrapper,\n  PizzaItemImage,\n  PizzaItemImageWrapper,\n  PizzaItemIngredients,\n  PizzaItemPriceText,\n  PizzaItemPriceWrapper,\n  PizzaItemTitle,\n  PizzaItemWrapper,\n  PizzaSelectorWrapper,\n  SelectorItem,\n  SelectorList,\n} from './PizzaItem.styled';\n\n// icons\nimport { TbCurrencyHryvnia } from 'react-icons/tb';\n\nconst PizzaItem = ({ item }) => {\n  const { imageUrl, title, types, sizes, price, ingredients } = item;\n\n  const [count, setCount] = useState(0);\n  const [sizeActiveIndex, setSizeActiveIndex] = useState(0);\n  const [typeActiveIndex, setTypeActiveIndex] = useState(0);\n  const [isIngredientsShown, setIsIngredientsShown] = useState(false);\n\n  const typeOptions = ['тонке', 'традиційне'];\n\n  const handeSizeActiveIndex = index => setSizeActiveIndex(index);\n  const handleTypeActiveIndex = index => setTypeActiveIndex(index);\n  const handleCountIncrement = () => setCount(prev => prev + 1);\n  const handleCountDecrement = () => {\n    if (count <= 0) {\n      return;\n    }\n    setCount(prev => prev - 1);\n  };\n  const handleIngredientsButton = () => {\n    setIsIngredientsShown(!isIngredientsShown);\n  };\n\n  const handleFullPrice = () => {\n    if (sizes[sizeActiveIndex] === 30) {\n      return `${Math.round(price * 1.35)}`;\n    } else if (sizes[sizeActiveIndex] === 40) {\n      return `${Math.round(price * 1.65)}`;\n    } else {\n      return `${price * 1}`;\n    }\n  };\n\n  return (\n    <PizzaItemWrapper>\n      <PizzaItemImageWrapper>\n        <PizzaItemImage src={imageUrl} alt=\"Pizza\" loading=\"lazy\" />\n\n        <IngredientsWrapper\n          style={{\n            opacity: !isIngredientsShown ? 0 : 0.95,\n            zIndex: !isIngredientsShown ? 0 : 111,\n          }}\n        >\n          {ingredients.map((ingredient, index) => (\n            <IngredientsText key={index}>{ingredient}</IngredientsText>\n          ))}\n        </IngredientsWrapper>\n      </PizzaItemImageWrapper>\n\n      <PizzaItemTitle>{title}</PizzaItemTitle>\n\n      <PizzaItemIngredients onClick={handleIngredientsButton}>\n        Інгрідієнти\n      </PizzaItemIngredients>\n\n      <PizzaSelectorWrapper>\n        <SelectorList>\n          {types.map((option, index) => (\n            <SelectorItem\n              key={index}\n              className={typeActiveIndex === index ? 'active' : ''}\n              onClick={() => handleTypeActiveIndex(index)}\n            >\n              {typeOptions[option]}\n            </SelectorItem>\n          ))}\n        </SelectorList>\n\n        <SelectorList>\n          {sizes.map((option, index) => (\n            <SelectorItem\n              onClick={() => handeSizeActiveIndex(index)}\n              className={sizeActiveIndex === index ? 'active' : ''}\n              key={index}\n            >\n              {option} см.\n            </SelectorItem>\n          ))}\n        </SelectorList>\n      </PizzaSelectorWrapper>\n\n      <PizzaItemBottomWrapper>\n        <PizzaItemPriceWrapper>\n          <PizzaItemPriceText>{handleFullPrice()}</PizzaItemPriceText>\n          <TbCurrencyHryvnia size={22} color=\"#000000\" />\n        </PizzaItemPriceWrapper>\n\n        <div style={{ display: 'flex', gap: 4 }}>\n          <Counter>\n            <CounterButton size={16}>\n              <CounterIconUp onClick={handleCountIncrement} />\n            </CounterButton>\n\n            <CounterButton size={16} disabled={count > 0 ? false : true}>\n              <CounterIconDown onClick={handleCountDecrement} />\n            </CounterButton>\n          </Counter>\n\n          <PizzaItemButtonWrapper onClick={handleCountIncrement}>\n            <p> + Додати</p>\n            <i>{count > 0 ? count : ' '}</i>\n          </PizzaItemButtonWrapper>\n        </div>\n      </PizzaItemBottomWrapper>\n    </PizzaItemWrapper>\n  );\n};\n\nexport default PizzaItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Skeleton = props => (\n  <ContentLoader\n    speed={2}\n    width={280}\n    height={558}\n    viewBox=\"0 0 280 558\"\n    backgroundColor=\"#e4e2e2\"\n    foregroundColor=\"#cbc3c3\"\n    {...props}\n  >\n    <rect x=\"16\" y=\"378\" rx=\"16\" ry=\"16\" width=\"248\" height=\"86\" />\n    <rect x=\"70\" y=\"330\" rx=\"16\" ry=\"16\" width=\"140\" height=\"26\" />\n    <rect x=\"16\" y=\"498\" rx=\"16\" ry=\"16\" width=\"248\" height=\"42\" />\n    <circle cx=\"138\" cy=\"143\" r=\"124\" />\n    <rect x=\"42\" y=\"281\" rx=\"16\" ry=\"16\" width=\"200\" height=\"24\" />\n  </ContentLoader>\n);\n\nexport default Skeleton;\n","import styled from '@emotion/styled';\n\nexport const PizzaTitle = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n\n  letter-spacing: 0.01em;\n  color: #000000;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 39px;\n    margin-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    font-size: 36px;\n    line-height: 42px;\n    margin-bottom: 44px;\n  }\n`;\n\nexport const PizzaGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  margin: 0 auto;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 36px;\n    max-width: 596px;\n    margin: 0 auto;\n    justify-content: start;\n  }\n\n  @media screen and (min-width: 1232px) {\n    gap: 60px;\n    max-width: 960px;\n    justify-content: start;\n  }\n`;\n","//redux\nimport { useSelector } from 'react-redux';\nimport { selectCategoryId, selectPizzas } from 'redux/slices/selectors';\n\n// components\nimport PizzaItem from 'components/PizzaItem/PizzaItem';\nimport Skeleton from 'components/Skeleton/Skeleto';\n\nimport { categoryOptions } from 'constants/categoryOptions';\n\n// styles\nimport { PizzaTitle, PizzaGallery } from './PizzaList.styled';\n\nconst PizzaList = ({ isLoading }) => {\n  const categoryId = useSelector(selectCategoryId);\n  const items = useSelector(selectPizzas);\n\n  const pizzas = items.map(item => <PizzaItem item={item} key={item.id} />);\n\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <Skeleton key={index} />\n  ));\n\n  return (\n    <>\n      <PizzaTitle>{categoryOptions[categoryId]}</PizzaTitle>\n\n      <PizzaGallery>{isLoading ? skeletons : pizzas}</PizzaGallery>\n    </>\n  );\n};\n\nexport default PizzaList;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationWrapper = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n  background: #ebddba;\n  margin: 0 auto;\n  margin-top: 60px;\n  width: 60%;\n  padding: 16px 0;\n  border-radius: 100px;\n  font-size: 18px;\n  font-weight: 600;\n\n  @media screen and (max-width: 768) {\n    width: 300px;\n  }\n\n  .selected a {\n    color: #fff;\n    background: green;\n  }\n\n  li {\n    display: flex;\n\n    a {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      width: 32px;\n      height: 32px;\n      line-height: 30px;\n      cursor: pointer;\n      padding: 6px 6px;\n      border-radius: 50%;\n      background: #fff;\n      border: 1px solid green;\n      color: green;\n      transition: all 250ms ease;\n\n      &:hover {\n        background: green;\n        color: #fff;\n      }\n    }\n  }\n`;\n","import { PaginationWrapper } from './Pagination.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPageCount } from 'redux/slices/selectors';\nimport { setPage } from 'redux/slices/filterSlice';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const pageCount = useSelector(selectPageCount);\n\n  const handlePage = event => {\n    dispatch(setPage(event.selected + 1));\n    window.scroll(0, 0);\n  };\n\n  return (\n    <>\n      <PaginationWrapper\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        previousLabel=\"<\"\n        onPageChange={event => handlePage(event)}\n        pageRangeDisplayed={6}\n        pageCount={pageCount}\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","// system\nimport { useEffect } from 'react';\n\n// redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCategoryId,\n  selectFilter,\n  selectSortType,\n  selectPage,\n  selectIsLoading,\n} from 'redux/slices/selectors';\n\nimport { setPageCount } from 'redux/slices/filterSlice';\nimport { setPizzasItems } from 'redux/slices/pizzasSlice';\n\n// components\nimport Homebar from 'components/HomeBar/HomeBar';\nimport PizzaList from 'components/PizzaList/PizzaList';\nimport Pagination from 'components/Pagination/Pagination';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const searchValue = useSelector(selectFilter);\n  const categoryId = useSelector(selectCategoryId);\n  const sortType = useSelector(selectSortType);\n  const page = useSelector(selectPage);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n\n    fetch(`https://645604705f9a4f236138e078.mockapi.io/items?${category}&`)\n      .then(res => res.json())\n      .then(data => dispatch(setPageCount(Math.ceil(data.length / 6))));\n  }, [categoryId, dispatch]);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortType.value.includes('-') ? 'order=desc' : 'order=asc';\n    const sortBy = sortType.value.replace('-', '');\n    const search = searchValue ? `search=${searchValue}` : '';\n\n    fetch(\n      `https://645604705f9a4f236138e078.mockapi.io/items?${category}&sortBy=${sortBy}&${order}&${search}&page=${page}&limit=6`\n    )\n      .then(res => res.json())\n      .then(data => {\n        dispatch(setPizzasItems(data));\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [categoryId, dispatch, page, searchValue, sortType]);\n\n  return (\n    <>\n      <Homebar />\n\n      <PizzaList isLoading={isLoading} />\n\n      <Pagination />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["categoryOptions","CategoryList","styled","CategoryButton","dispatch","useDispatch","categoryId","useSelector","selectCategoryId","map","option","index","onClick","setCategoryId","clearPage","className","sortOptions","name","value","SortWrapper","SortLabel","SortLabelIconUp","GoTriangleUp","SortTextWrapper","SortLabelIconDown","GoTriangleDown","SortLabelBoldText","SortLabelText","SortPopup","SortPopupList","SortPopupItem","sort","selectSortType","useState","isMenuOpen","setIsMenuOpen","switchSortMenu","prev","setSortType","HomeBarWrapper","PizzaItemWrapper","PizzaItemImageWrapper","PizzaItemImage","PizzaItemTitle","PizzaItemIngredients","IngredientsWrapper","IngredientsText","PizzaSelectorWrapper","SelectorList","SelectorItem","PizzaItemBottomWrapper","PizzaItemPriceWrapper","PizzaItemPriceText","PizzaItemButtonWrapper","Counter","CounterButton","CounterIconUp","CounterIconDown","item","imageUrl","title","types","sizes","price","ingredients","count","setCount","sizeActiveIndex","setSizeActiveIndex","typeActiveIndex","setTypeActiveIndex","isIngredientsShown","setIsIngredientsShown","typeOptions","handleCountIncrement","src","alt","loading","style","opacity","zIndex","ingredient","handleTypeActiveIndex","handeSizeActiveIndex","Math","round","size","color","display","gap","disabled","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","PizzaTitle","PizzaGallery","isLoading","pizzas","selectPizzas","id","skeletons","Array","_","Skeleto","PaginationWrapper","ReactPaginate","pageCount","selectPageCount","breakLabel","nextLabel","previousLabel","onPageChange","event","setPage","selected","window","scroll","handlePage","pageRangeDisplayed","renderOnZeroPageCount","searchValue","selectFilter","sortType","page","selectPage","selectIsLoading","useEffect","category","fetch","then","res","json","data","setPageCount","ceil","length","order","includes","sortBy","replace","search","setPizzasItems","catch","error","Error"],"sourceRoot":""}